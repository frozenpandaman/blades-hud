{"version":3,"sources":["Clock.tsx","ClockBar.tsx","SignIn.tsx","Util.tsx","Dice.tsx","Notes.tsx","Tools.tsx","Hud.tsx","serviceWorker.ts","index.tsx"],"names":["Clock","c","progress","n_slices","w","theta","this","props","clock","slices","push","x","y","radius","fill","stroke","strokeWidth","onClick","incr_func","onContextMenu","e","evt","preventDefault","i","h","angle","rotation","key","toString","className","width","height","desc","React","PureComponent","ClockBar","clocks","Array","from","map","pair","id","click_func","owner","delete_func","window","prompt","Number","new_func","SignIn","state","email","pw","handleEmailChange","bind","handlePwChange","handleSubmit","event","setState","target","value","firebase","signInWithEmailAndPassword","catch","error","console","log","message","onSubmit","type","onChange","bring_to_front","arr","item","target_idx","indexOf","cpy","slice","splice","Dice","dice","index","max","Math","floor","random","num","handle_die_click","style","justifyContent","delete_die","new_die","Notes","notes","rows","tools","Tools","current_tool","renderSwitch","option","tool","players","Hud","db","util","unsub_auth","onAuthStateChanged","user","loadData","group_clocks","Map","player_clocks","current_player","unsub_fns","handle_clock_click","new_clock","delete_clock","change_player","fn","unsub_funcs","collection","orderBy","onSnapshot","snap","docs","doc","data","doc_ids","gc","forEach","set","length","concat","add","timestamp","Timestamp","now","incr","alert","button","clock_doc","get","then","a","old_clock","incr_clock","delete","currentTarget","ordered_players","player","Boolean","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.930479f8.chunk.js","sourcesContent":["import React from \"react\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Wedge, Circle } from \"react-konva\";\nimport { Clock_t } from \"./Types\";\n\ninterface Props {\n    clock: Clock_t;\n    incr_func: (e: Konva.KonvaEventObject<MouseEvent>) => void;\n}\n\nclass Clock extends React.PureComponent<Props, {}> {\n    public is_full(c: Clock_t): boolean {\n        return c.progress === c.n_slices;\n    }\n\n    public is_empty(c: Clock_t): boolean {\n        return c.progress === 0;\n    }\n\n    public render() {\n        const w = 130;\n        const h = 130;\n\n        const theta = 360 / this.props.clock.n_slices;\n        let slices = [];\n\n        if (this.props.clock.n_slices === 1) {\n            slices.push(\n                <Circle\n                    x={w/2}\n                    y={w/2}\n                    radius={60}\n                    fill={this.props.clock.progress === 1 ? \"gray\" : \"white\"}\n                    stroke={\"black\"}\n                    strokeWidth={2}\n                    onClick={this.props.incr_func}\n                    onContextMenu={e => {\n                        // Suppress right click menu on clocks\n                        e.evt.preventDefault();\n                    }}\n                />\n            );\n        } else {\n            for (let i = 0; i < this.props.clock.n_slices; i++) {\n                slices.push(\n                    <Wedge\n                        x={w / 2}\n                        y={h / 2}\n                        radius={60}\n                        angle={theta}\n                        fill={i < this.props.clock.progress ? \"gray\" : \"white\"}\n                        stroke={\"black\"}\n                        strokeWidth={2}\n                        rotation={i * theta - 90}\n                        onClick={this.props.incr_func}\n                        onContextMenu={e => {\n                            // Suppress right click menu on clocks\n                            e.evt.preventDefault();\n                        }}\n                        key={i.toString()}\n                    />\n                );\n            }\n        }\n\n        return (\n            <div className=\"flex flex-column mw5\">\n                <div className=\"pa3 mw5 self-center\">\n                    <Stage width={w} height={h}>\n                        <Layer>{slices}</Layer>\n                    </Stage>\n                </div>\n                <p className=\"tc pa1 ws-normal\">{this.props.clock.desc}</p>\n            </div>\n        );\n    }\n}\n\nexport default Clock;\n","import React from \"react\";\nimport { Clock_t } from \"./Types\";\nimport Clock from \"./Clock\";\n\ninterface Props {\n    clocks: Map<string, Clock_t>;\n    owner: string;\n    click_func: Function;\n    new_func: Function;\n    delete_func: Function;\n}\n\nfunction ClockBar(props: Props) {\n    const clocks = Array.from(props.clocks).map(pair => {\n        const id = pair[0];\n        const clock = pair[1];\n\n        return (\n            <div key={id} className=\"flex flex-column justify-between outline\">\n                <div className=\"\">\n                    <Clock\n                        clock={clock}\n                        incr_func={e => props.click_func(e, props.owner, id)}\n                    />\n                </div>\n                <div className=\"tc pb2\">\n                    <button className=\"ba pointer ph1\"\n                       onClick={() => {\n                           props.delete_func(id, props.owner);\n                       }}\n                    >Delete</button>\n                </div>\n            </div>\n        );\n    });\n\n    return (\n        <div>\n            <div className=\"p0\">\n                <p className=\"ttc f3\">{props.owner}</p>\n            </div>\n            <div className=\"flex bt bb\">\n                <div className=\"flex flex-column tc bg-blue pointer justify-center\"\n                     onClick={ () => {\n                         const desc = window.prompt(\"What's the clock for?\");\n                         const n_slices = Number(window.prompt(\"How many slices?\", \"4\"));\n                         props.new_func(props.owner, desc, n_slices);\n                     }}\n                >\n                    <div className=\"f2 w3\">+</div>\n                </div>\n\n                <div className=\"flex overflow-x-scroll items-top w-100\">\n                    {clocks}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ClockBar;\n","import * as React from \"react\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\ninterface State {\n    email: string,\n    pw: string,\n}\n\nclass SignIn extends React.PureComponent<{}, State> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            email: \"\",\n            pw: \"\",\n        };\n\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePwChange = this.handlePwChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleEmailChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            email: event.target.value\n        });\n    }\n\n    handlePwChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            pw: event.target.value\n        });\n    }\n\n    handleSubmit(event: React.ChangeEvent<HTMLFormElement>) {\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.pw).catch(function(error) {\n            console.log(error.message);\n        })\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              E-mail:\n              <input type=\"text\" value={this.state.email} onChange={this.handleEmailChange} />\n              Password:\n              <input type=\"password\" value={this.state.pw} onChange={this.handlePwChange}  />\n            </label>\n            <input type=\"submit\" value=\"Sign In\" />\n          </form>\n        );\n    }\n}\n\nexport default SignIn;","function bring_to_front(arr: string[], item: string): string[] {\n    const target_idx = arr.indexOf(item);\n    // arr.splice(target_idx, 1);\n    // arr.splice(0, 0, item);\n    // return arr;\n    let cpy = arr.slice(0);\n    cpy.splice(target_idx, 1);\n    cpy.splice(0, 0, item);\n    return cpy;\n};\n\nfunction random_int(max:number){\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport {bring_to_front, random_int};","import React from \"react\";\nimport * as util from \"./Util\";\n\n\ninterface State {\n    dice:number[];\n}\n\nclass Dice extends React.PureComponent<{}, State> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            dice: [1],\n        };\n    }\n\n    private new_die() {\n        this.setState((state)=>({dice:[...state.dice, 1]}));\n    }\n\n    private delete_die() {\n        this.setState((state)=>({dice:state.dice.slice(0,-1)}));\n    }\n\n    private handle_die_click(index:number) {\n        this.setState((state)=>{\n            const dice = state.dice.map((item, i) => {\n                if (i === index) {\n                  return util.random_int(6)+1;\n                } else {\n                  return item;\n                }\n            });\n            return({dice:dice})\n        });\n    }\n\n    render(){\n        const dice = this.state.dice.map((num, index) => {\n            return(\n                <div className=\"w3 h3 ba br2 pointer bg-yellow tc flex flex-column justify-center ma2\"\n                     onClick={()=>this.handle_die_click(index)}\n                >\n                    <div className=\"f2\">{num}</div>\n                </div>\n            )\n        });\n\n        return (\n        <div>\n            <h3 className=\"tc\">Here roll some dice why not?</h3>\n            <div className=\"flex\" style={{justifyContent:\"space-around\"}}>\n                <button className=\"bg-blue f2 flex-auto pointer tc br\"\n                    onClick = {()=>this.delete_die()}\n                >\n                    -\n                </button>\n                <button className=\"bg-blue f2 flex-auto pointer tc\"\n                    onClick = {()=>this.new_die()}\n                >\n                    +\n                </button>\n            </div>\n            <div className=\"flex flex-wrap justify-around\">\n                {dice}\n            </div>\n            <div className=\"flex\" style={{justifyContent:\"space-around\"}}>\n                <button className=\"bg-blue f2 flex-auto pointer tc br\"\n                    onClick = {()=>{\n                        this.state.dice.map((num, index) => this.handle_die_click(index));\n                    }}\n                >\n                    Roll All\n                </button>\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default Dice;\n","import React from \"react\";\nimport * as util from \"./Util\";\n\n\ninterface State {\n    notes:string;\n}\n\nclass Notes extends React.PureComponent<{}, State> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            notes: \"\",\n        };\n    }\n\n    render(){\n        return (\n            <div className=\"flex\">\n                <textarea className=\"flex-auto\" rows={30}>\n                  This doesn't actually save, so, ya know, don't really use it yet.\n                </textarea>\n            </div>\n        );\n    }\n}\n\nexport default Notes;\n","import * as React from \"react\";\nimport * as firebase from \"firebase/app\";\nimport Dice from \"./Dice\"\nimport Notes from \"./Notes\"\nimport \"firebase/auth\";\n\ninterface State {\n    current_tool:string;\n}\n\nconst tools:string[] = [\"dice\"];\n// const tools:string[] = [\"dice\", \"notes\"];\n\n\nclass Tools extends React.PureComponent<{}, State> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            current_tool:tools[0],\n        };\n        this.renderSwitch = this.renderSwitch.bind(this);\n    }\n\n    renderSwitch(option:string){\n        switch(option){\n            case \"dice\":\n                return(<Dice/>)\n            case \"notes\":\n                return(<Notes/>)\n            default:\n                return(null)\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"pa1\">\n                <hr/>\n                <div className=\"flex flex-wrap\" style={{justifyContent:\"space-around\"}}>\n                    {tools.map(tool =>{return(\n                        <button className=\"bg-blue f3 flex-auto pointer tc br\"\n                                onClick={()=>this.setState({current_tool:tool})}\n                        >\n                            {tool}\n                        </button>\n                    )})}\n                </div>\n                <hr/>\n                {this.renderSwitch(this.state.current_tool)}\n            </div>\n        )\n    }\n}\n\nexport default Tools;","import React from \"react\";\nimport ClockBar from \"./ClockBar\";\nimport SignIn from \"./SignIn\";\nimport Tools from \"./Tools\";\nimport Konva from \"konva\";\nimport { Clock_t } from \"./Types\";\nimport * as util from \"./Util\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst players = [\"group\", \"bricks\", \"shivers\", \"dogs\", \"tick tock\"];\n\ninterface State {\n    user: firebase.User | null;\n    group_clocks: Map<string, Clock_t>;\n    player_clocks: { [name: string]: Map<string, Clock_t> };\n    current_player: string;\n    unsub_fns: Function[];\n    dice:number[];\n    notes:string;\n}\n\n\nclass Hud extends React.PureComponent<{}, State> {\n    private db = firebase.firestore();\n\n    constructor(props: {}) {\n        super(props);\n\n        console.log(util.bring_to_front(players, \"dogs\"));            \n        console.log(players);            \n        const unsub_auth = firebase.auth().onAuthStateChanged(user => {\n            this.setState({ user: user });\n            this.loadData();\n        });\n\n        this.state = {\n            user: null,\n            group_clocks: new Map(),\n            player_clocks: {\n                \"bricks\": new Map(),\n                \"shivers\": new Map(),\n                \"dogs\": new Map(),\n                \"tick tock\": new Map(),\n            },\n            current_player: \"bricks\",\n            unsub_fns: [unsub_auth],\n            dice: [1],\n            notes:\"\",\n        };\n\n        this.handle_clock_click = this.handle_clock_click.bind(this);\n        this.new_clock = this.new_clock.bind(this);\n        this.delete_clock = this.delete_clock.bind(this);\n        this.change_player = this.change_player.bind(this);\n    }\n\n    public componentWillUnmount() {\n        for (const fn of this.state.unsub_fns) {\n            fn();\n        }\n    }\n\n    private loadData() {\n        if (this.state.user === null) {\n            return\n        } else {\n            let unsub_funcs: Function[] = [];\n\n            for (let i = 0; i < players.length; i++) {\n                unsub_funcs[i] = this.db.collection(players[i] + \"_clocks\")\n                    .orderBy(\"timestamp\", \"desc\")\n                    .onSnapshot(snap => {\n                        const clocks = snap.docs.map(doc => doc.data() as Clock_t);\n                        const doc_ids = snap.docs.map(doc => doc.id);\n\n                        let gc = new Map<string, Clock_t>();\n                        doc_ids.forEach((id, i) => { gc.set(id, clocks[i])});\n\n                        if (players[i] === \"group\") {\n                            this.setState({\n                                group_clocks: gc,\n                            });\n                        } else {\n                            this.setState((state, props) => {\n                                return {\n                                    ...state,\n                                    player_clocks: {\n                                        ...state.player_clocks,\n                                        [players[i]]: gc,\n                                    }\n                                }\n                            })\n                        }\n                    });\n            }\n\n            this.setState((state, props) => {\n                return {\n                    ...state,\n                    unsub_fns: state.unsub_fns.concat(unsub_funcs),\n                }\n            });\n        }\n    }\n\n    private new_clock(owner: string, desc: string, n_slices: number) {\n        this.db.collection(owner + \"_clocks\").add({\n            desc: desc,\n            n_slices: n_slices,\n            progress: 0,\n            timestamp: firebase.firestore.Timestamp.now(),\n        })\n    }\n\n    private incr_clock(c: Clock_t, incr: 1 | -1): Clock_t {\n        // Ignore increment/decrement past max value\n        if ((incr === 1 && c.n_slices === c.progress) ||\n            (incr === -1 && c.progress === 0))\n        {\n            return c;\n        }\n\n        return {\n            ...c,\n            progress: c.progress + incr,\n            n_slices: c.n_slices,\n        };\n    }\n\n    private handle_clock_click(evt: Konva.KonvaEventObject<MouseEvent>, owner: string, id: string) {\n        if (this.state.user === null) {\n            alert(\"Error: You're not logged in! AaaAAh!\");\n        }\n\n        let e = evt.evt; // the underlying js event\n        e.preventDefault();\n\n        // Ignore clicks with buttons other than left or right mb\n        if (e.button !== 0 && e.button !== 2) {\n            return;\n        }\n\n        const incr = e.button === 0 ? 1 : -1;\n\n        // set the new clock\n        const clock_doc = this.db.collection(owner + \"_clocks\").doc(id);\n\n        clock_doc.get().then(a => {\n            const old_clock = a.data() as Clock_t;\n            clock_doc.set(this.incr_clock(old_clock, incr))\n        });\n    }\n\n    private delete_clock(id: string, owner: string) {\n        this.db.collection(owner + \"_clocks\").doc(id).delete();\n    }\n\n    private change_player(e: React.FormEvent<HTMLSelectElement>) {\n        this.setState({\n            current_player: e.currentTarget.value,\n        });\n    }\n\n    public render() {\n        // if not signed in\n        if (!this.state.user) {\n            return (\n            <div className=\"outline\">\n                <SignIn />\n            </div>\n            );\n        } else { // if signed in\n            const ordered_players = [\"group\"].concat(util.bring_to_front(players.slice(1), this.state.current_player));\n            return (\n                <div className=\"flex\">\n                    <div className=\"flex flex-column w-80\">\n                        {ordered_players.map(owner => {\n                            return <div key={owner} className=\"\">\n                                <ClockBar owner={owner}\n                                          clocks={owner === \"group\"\n                                                      ? this.state.group_clocks\n                                                      : this.state.player_clocks[owner]\n                                                 }\n                                          click_func={this.handle_clock_click}\n                                          new_func={this.new_clock}\n                                          delete_func={this.delete_clock}\n                                          />\n                            </div>\n                        })}\n                    </div>\n                    <div className=\"flex-column w-20 outline\">\n                        <div className=\"flex flex-wrap\">\n                            <p className=\"f4\">Which one are you?</p>\n                            <select value={this.state.current_player} onChange={this.change_player}>\n                                { players.slice(1).map( player => { // slice off the \"group\" player\n                                    return <option value={player}>{player}</option>\n                                }) }\n                            </select>\n                        </div>\n                        <Tools/>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Hud;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Hud from \"./Hud\";\nimport * as firebase from \"firebase/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAwY_9bJhDtZRn52OWKkU9J3gNklyB2MaU\",\n    authDomain: \"bitd-hud.firebaseapp.com\",\n    databaseURL: \"https://bitd-hud.firebaseio.com\",\n    projectId: \"bitd-hud\",\n    storageBucket: \"bitd-hud.appspot.com\",\n    messagingSenderId: \"87588692405\",\n    appId: \"1:87588692405:web:eb12f6f11340afbc\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<Hud />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}